@use "sass:math";

.content-display{
    // position: absolute;//why sa ?
   // overflow: hidden;//why sa ? 
    opacity: 0;
    
    animation: page_display 0s $page-disp-delay forwards;   
}
.content-display--menu{

     opacity: 0;
     animation: menu_display $menu-section_duration $menu-section_delay ease-out forwards;

     ul {     

          @for $i from 1 through 5 {
              
                 li:nth-child(#{$i}) {
                    opacity: 0;
                   // Delay the animation. Delay increases as items loop.
                   $animation_delay: (($i * $menu-child_delay) + $menu-firstchild_delay) ;
                   animation: menu_display $menu-child_duration $animation_delay ease-in-out forwards;
                 }
          }
     }  
          
}         
.content-display--menu2{
     @for $n from 1 through 4 {
              
          figure:nth-child(#{$n}) {
             opacity: 0;
            // Delay the animation. Delay increases as items loop.
            $animation1_delay: (($n * $menu-section_delay) + (($n - 1) * $menu-section_duration) + $menu-section_delay-mod);
            
            animation: menu_display $menu-child_duration $animation1_delay ease-in-out forwards;
            //animation: menu_display $menu-child_duration 0.5s ease-in-out forwards;
            ul {     

               @for $i from 1 through 5 {
                   
                      li:nth-child(#{$i}) {
                         opacity: 0;
                        // Delay the animation. Delay increases as items loop.
                         $parent_delay: $animation1_delay + $menu-section_duration ;
                        //$parent_delay: 0.5s;
                       // $animation2_delay: (($i * $menu-child_delay) + $menu-firstchild_delay-mod) ;
                         $animation2_delay: (($i * $menu-child_delay) + ($menu-firstchild_delay-mod + $parent_delay)) ;
                         animation: menu_display $menu-child_duration $animation2_delay ease-in-out forwards;
                      }
               }
          }
          }
        }
}
              


.loading-spinner{

     $diameter: 200px; //set the diameter of the loader,
     $thickness: 82.5%; //set the thickness or "inner diameter" of the loader,    
     //more is less thick
     $vertical_center: -(($diameter * 0.5)+25px);
     //+25 compence le decalage donner par le header ? enfin bref valeur magique

     

     position: fixed;
     
     top: 50%;
     
     margin-top: $vertical_center ;//serta centrer le loader avec le haut
     //margin-top: 50%;
     width: $diameter;
     height: $diameter;
     border-radius: 25%;
     border: 3px solid white;
     
     background: linear-gradient($primary-color, $secondary-color, $primary-color);
     box-shadow: 0px 0px 100px -50px black;
     
     animation: loader $loader-duration $loader-delay cubic-bezier(0.3, 0.3, 1, 1) $time-repeat;

     //display: none;
     opacity: 0;
   
     &:before {
       
       position: absolute;
     content: "";
     background: #fff;
     left: 50%;
     top: 50%;
     transform: translate(-50%, -50%);
     width: $thickness;
     height: $thickness;
     border-radius: 10rem;
     border: 3px solid white;
     box-shadow: inset 0px 0px 100px -70px 
     }
}


@keyframes loader {
     0%{
          transform: rotate(0deg);
          opacity: 0;         
     }
     25%{
          opacity: 1; 
     }
     50%{
          transform: rotate(360deg);    
                  
     }
     75%{
          opacity: 1;
     }
     100%{
          transform: rotate(0deg);
          opacity: 0; 
     }
}


@keyframes page_display{
     0% {
         //transform: translateX(-9999px);
         //scale:0;
         opacity: 0;
     }
     100% {
         //transform: translateX(0);
         
        // scale:1;
        opacity: 1;
     }
 }
 @keyframes menu_display{
     0% {
         //transform: translateX(-9999px);
         //scale:0;
         opacity: 0;
         transform: translateY(50px);
     }
     100% {
         //transform: translateX(0);
         
        // scale:1;
        opacity: 1;
        transform: translateY(0);
     }
 }

 /*---------------------------------------------------------------*/
 
//-----a priory fini
.chk-anim{
     .shrink-anim{
          animation: shrink_rev $check-anim__duration $check-anim__delay linear both alternate;
     
     }
     &__container{
          //display: flex;
          //flex-direction: row;
         // align-items: flex-end;
         display: block;
         position: relative;
          
          
          .text-translate{               
               position: absolute;
               bottom: 0px;
               right: 5px;    
               animation: text_rev $check-anim__duration $check-anim__delay linear reverse forwards;              
          }
          
     
     .background-translate{ 
                 
          height: 77px;
          width: 80px;
          border-radius: 0px 16px 16px 0px;    
          
          background: linear-gradient(to right, white 50%, $tersiary-color 50%);
          background-size: 200% 100%;

          display: flex;
          align-items: center;
          justify-content: center;
     
          overflow: hidden;
          
          animation: main_container_rev $check-anim__duration $check-anim__delay linear reverse both;
          .chk-translate{
               height: 30px;
               width: 30px;
               animation: check_container_rev $check-anim__duration $check-anim__delay linear reverse forwards;
               
               i {
               
               color: $tersiary-color;
               background-color: white;                  
              
               display: flex;
               align-items: center;
               justify-content: center;
     
               border-radius: 15px;
               height: 30px;
               width: 30px;

               animation: check_rev  $check-anim__duration $check-anim__delay linear reverse forwards ;
               }
          }
     }
     }
     

     &:hover {
          .shrink-anim{
               animation: shrink $check-anim__duration $check-anim__delay linear both alternate;
          
          }
     }    
     &:hover .chk-anim__container{
          
          .text-translate{
               animation: text $check-anim__duration $check-anim__delay linear forwards;
               }
          
          .background-translate{

               
             
               animation: main_container $check-anim__duration $check-anim__delay linear both;
               .chk-translate{
                    animation: check_container $check-anim__duration $check-anim__delay linear forwards;   
                    i{
                         
                         animation: check  $check-anim__duration $check-anim__delay linear forwards ;
                    }
               }        
            
            
          }
     }  

}

@keyframes main_container {
     
     0% {
          background-position: left;
     }     
     100% {background-position: right;}
}
@keyframes check_container {
     
     0% {
          
          transform: translateX(200%);
     }     
     100% {
          
          transform: translateX(0%);
     }
}
@keyframes check {    
     
     0% {
          
          transform:  rotate(90deg) ;
     }  
     100% {
          
          transform: rotate(360deg) ;
     }
}
@keyframes text {    
     
     0% {
          
          transform: translateX(0%); ;
     }  
     100% {
          
          transform: translateX(-300%); ;
     }
}
@keyframes shrink {    
     
     0% {         
           width: 80%;
     }  
     100% {         
          width : 60% ;
     }
}

//reverse
@keyframes main_container_rev {     
     
     0% {
          
          background-position: left;
     }     
     100% {
          
          background-position: right;
     }
}
@keyframes check_container_rev {
     
     0% {
          
          transform: translateX(200%);
     }     
     100% {
          
          transform: translateX(0%);
     }
}
@keyframes check_rev {    
     
     0% {
          
          transform:  rotate(90deg) ;
     }  
     100% {
          
          transform: rotate(360deg) ;
     }
}
@keyframes text_rev {    
     
     0% {
          
          transform: translateX(0%); ;
     }  
     100% {
          
          transform: translateX(-300%); ;
     }
}
@keyframes shrink_rev {    
     
     0% {         
           width: 60%;
     }  
     100% {         
          width : 80% ;
     }
}



